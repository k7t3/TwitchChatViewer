name: Deployment

on:
  push:
    tags:
      # ドットをエスケープしなくていい(正規表現でない)
      - 'v[0-9]+.[0-9]+.[0-9]+*'
  workflow_dispatch:

jobs:
  parse_version: # プッシュされたタグの文字列からバージョンをパースする
    runs-on: ubuntu-latest
    outputs:
      full_version: ${{ steps.parse.outputs.full_version }}
      version: ${{ steps.parse.outputs.version }}
      major: ${{ steps.parse.outputs.major }}
      minor: ${{ steps.parse.outputs.minor }}
      patch: ${{ steps.parse.outputs.patch }}
      suffix: ${{ steps.parse.outputs.suffix }}
    steps:
      - name: Parse version from tag
        id: parse
        run: |
          FULL_VERSION=${GITHUB_REF#refs/tags/v}
          VERSION=$(echo $FULL_VERSION | cut -d'-' -f1)
          SUFFIX=$(echo $FULL_VERSION | cut -s -d'-' -f2-)
          echo "full_version=$FULL_VERSION" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "major=$(echo $VERSION | cut -d. -f1)" >> $GITHUB_OUTPUT
          echo "minor=$(echo $VERSION | cut -d. -f2)" >> $GITHUB_OUTPUT
          echo "patch=$(echo $VERSION | cut -d. -f3)" >> $GITHUB_OUTPUT
          echo "suffix=$SUFFIX" >> $GITHUB_OUTPUT
  make: # タグから識別したバージョン情報に基づくアプリケーションを生成する
    strategy:
      matrix:
        # WindowsランナーはWiX Toolset 3.14.1.8722入り
        # MacOSはIntel CPU(macos-13)とApple Silicon CPU(macos-14)
        # https://docs.github.com/ja/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        os: [windows-latest, macos-13, macos-14]
    runs-on: ${{ matrix.os }}
    needs: parse_version
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 21.0.1
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Make an application for Windows
        if: (matrix.os == 'windows-latest')
        run: .\gradlew.bat "-Papp.version=${{ needs.parse_version.outputs.full_version }}" make
      - name: Make an application
        if: (matrix.os != 'windows-latest')
        run: ./gradlew "-Papp.version=${{ needs.parse_version.outputs.full_version }}" make
      - name: Rename an application for Windows
        if: (matrix.os == 'windows-latest')
        shell: bash
        run: |
          mv '.\build\app\Twitch Chat Viewer-${{ needs.parse_version.outputs.version }}.exe' '.\build\app\Twitch Chat Viewer-${{ needs.parse_version.outputs.full_version }}.exe'
      - name: Rename an application for Intel Mac
        if: (matrix.os == 'macos-13')
        shell: bash
        run: |
          mv "build/app/Twitch Chat Viewer-${{ needs.parse_version.outputs.version }}.dmg" "build/app/Twitch Chat Viewer-${{ needs.parse_version.outputs.full_version }}-x86_64.dmg"
      - name: Rename an application for Apple Silicon Mac
        if: (matrix.os == 'macos-14')
        shell: bash
        run: |
          mv "build/app/Twitch Chat Viewer-${{ needs.parse_version.outputs.version }}.dmg" "build/app/Twitch Chat Viewer-${{ needs.parse_version.outputs.full_version }}-arm64.dmg"
      - name: Detect asset file for Windows
        if: (matrix.os == 'windows-latest')
        shell: pwsh
        run: |
          echo "asset_path=build\app\$(Get-ChildItem -name .\build\app)" >> $env:GITHUB_ENV
          echo "asset_name=$(Get-ChildItem -name .\build\app)" >> $env:GITHUB_ENV
      - name: Detect asset file
        if: (matrix.os != 'windows-latest')
        shell: bash
        run: |
          echo "asset_path=build/app/$(ls build/app)" >> $GITHUB_ENV
          echo "asset_name=$(ls build/app)" >> $GITHUB_ENV
      - name: Upload artifacts
        uses: actions/upload-artifact@v4 # https://github.com/actions/upload-artifact
        with:
          name: ${{ env.asset_name }}
          path: ${{ env.asset_path }}
          compression-level: 0
  release:
    runs-on: ubuntu-latest
    needs: make
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4.1.8
        with:
          download-path: build/distribution/
      - name: Create Release
        uses: softprops/action-gh-release@v2 # https://github.com/softprops/action-gh-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          draft: true # ドラフトリリースとし、公開は手動で行う
          files: build/distribution/*
